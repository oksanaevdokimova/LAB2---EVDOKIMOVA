% Лабораторная №2 Евдокимова О.С. ЭВМб-22-1.
% ВАРИАНТ 6 и 15.
% ЛЁГКОЕ ВЫПОЛНЕНИЕ ЗАДАНИЯ.

% Слить два упоpядоченных списка в один, сохpанив упоpядоченность.
merge_sorted_lists([], L, L). % Если первый список пуст, результат — второй список.
merge_sorted_lists(L, [], L). % Если второй список пуст, результат — первый список.

% Сохраняем упорядоченность.
merge_sorted_lists([H1|T1], [H2|T2], [H1|T]) :- 
    H1 =< H2, % Если голова первого <= головы второго, то берём голову первого.
    merge_sorted_lists(T1, [H2|T2], T).
merge_sorted_lists([H1|T1], [H2|T2], [H2|T]) :-
    H1 > H2, % Если голова первого > головы второго, то берём голову первого.
    merge_sorted_lists([H1|T1], T2, T).

% Найти сумму элементов списка, стоящих на нечетных местах в списке.
sum_odd_positions([], 0). % Если список пустой, то сумма = 0.
sum_odd_positions([H], H). % Если один элемент, то он стоит на нечётной позиции. Берём его.
sum_odd_positions([H, _|T], Sum) :- % H - нечётный. _ - чётный. T - хвост с 3-ей позиции.
    sum_odd_positions(T, Rest), % Рекурсивно вычисляем сумму с 3-й позиции.
    Sum is H + Rest. % Добавляем H к сумме оставшихся нечётных элементов